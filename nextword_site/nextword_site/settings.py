"""
Django settings for Next_Word_Prediction_Analysis project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import json
import os
from pathlib import Path
from typing import Optional

from dotenv import load_dotenv
load_dotenv()

# --- Base paths ---
BASE_DIR = Path(__file__).resolve().parent.parent

# Load .env if present (development convenience)
load_dotenv(BASE_DIR / ".env")

# --- Minimal settings (harden for prod) ---
SECRET_KEY = os.getenv("SECRET_KEY", "dev-secret-not-for-prod")
DEBUG = os.getenv("DEBUG", "true").lower() == "true"
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")

INSTALLED_APPS = [
    "django.contrib.admin", "django.contrib.auth", "django.contrib.contenttypes",
    "django.contrib.sessions", "django.contrib.messages", "django.contrib.staticfiles",
    "predictor",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "nextword_site.urls"

TEMPLATES = [{
    "BACKEND": "django.template.backends.django.DjangoTemplates",
    "DIRS": [BASE_DIR / "templates"],
    "APP_DIRS": True,
    "OPTIONS": {"context_processors": [
        "django.template.context_processors.debug",
        "django.template.context_processors.request",
        "django.contrib.auth.context_processors.auth",
        "django.contrib.messages.context_processors.messages",
    ]},
}]

WSGI_APPLICATION = "nextword_site.wsgi.application"
ASGI_APPLICATION = "nextword_site.asgi.application"

# --- DB: sqlite by default (swap to Postgres via DATABASE_URL) ---
if os.getenv("DATABASE_URL"):
    import dj_database_url
    DATABASES = {"default": dj_database_url.parse(os.getenv("DATABASE_URL"))}
else:
    DATABASES = {"default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }}

# --- Static ---
STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# --- Model artifacts configuration ---
# You can override these via environment variables or use the defaults below.
ARTIFACTS_DIR = Path(os.getenv("ARTIFACTS_DIR", BASE_DIR / "predictor" / "artifacts"))
MODEL_PATH = Path(os.getenv("MODEL_PATH", ARTIFACTS_DIR / "nextWordPredict" / "nextWord.h5"))
TOKENIZER_PATH = Path(os.getenv("TOKENIZER_PATH", ARTIFACTS_DIR / "tokenizer.pkl"))
METADATA_PATH = Path(os.getenv("METADATA_PATH", ARTIFACTS_DIR / "metadata.json"))

# Optional explicit seq length (overrides metadata/model)
SEQ_LENGTH: Optional[int] = None
if os.getenv("SEQ_LENGTH"):
    try:
        SEQ_LENGTH = int(os.getenv("SEQ_LENGTH"))
    except ValueError:
        SEQ_LENGTH = None  # ignore bad input
